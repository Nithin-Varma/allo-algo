#pragma version 10

smart_contracts.registry.contract.Anchor.approval_program:
    intcblock 0 1 4
    bytecblock "owner"
    txn ApplicationID
    bnz main_after_if_else@2
    callsub __init__

main_after_if_else@2:
    callsub __puya_arc4_router__
    return


// smart_contracts.registry.contract.Anchor.__init__() -> void:
__init__:
    // contract.py:11
    // def __init__(self) -> None:
    proto 0 0
    // contract.py:12
    // self.owner = algopy.Account()
    bytec_0 // "owner"
    global ZeroAddress
    app_global_put
    retsub


// smart_contracts.registry.contract.Anchor.__puya_arc4_router__() -> uint64:
__puya_arc4_router__:
    // contract.py:8-10
    // # ANCHOR_APPROVAL_CONTRACT_BYTES :bytes = ""
    // # ANCHOR_CLEAR_CONTRACT_BYTES: bytes = "I3ByYWdtYSB2ZXJzaW9uIDEwCgpzbWFydF9jb250cmFjdHMuYW5jaG9yLmNvbnRyYWN0LkFuY2hvci5jbGVhcl9zdGF0ZV9wcm9ncmFtOgogICAgaW50IDEKICAgIHJldHVybgo="
    // class Anchor(algopy.ARC4Contract):
    proto 0 1
    txn NumAppArgs
    bz __puya_arc4_router___bare_routing@8
    pushbytess 0x854a518d 0x3bd7ce2c 0x0fd99870 0x2826b202 // method "create(account)void", method "transferAlgo(account,uint64)void", method "transferAsset(account,asset,uint64)void", method "opt_into_asset(asset)void"
    txna ApplicationArgs 0
    match __puya_arc4_router___create_route@2 __puya_arc4_router___transferAlgo_route@3 __puya_arc4_router___transferAsset_route@4 __puya_arc4_router___opt_into_asset_route@5
    intc_0 // 0
    retsub

__puya_arc4_router___create_route@2:
    // contract.py:13
    // @algopy.arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // contract.py:8-10
    // # ANCHOR_APPROVAL_CONTRACT_BYTES :bytes = ""
    // # ANCHOR_CLEAR_CONTRACT_BYTES: bytes = "I3ByYWdtYSB2ZXJzaW9uIDEwCgpzbWFydF9jb250cmFjdHMuYW5jaG9yLmNvbnRyYWN0LkFuY2hvci5jbGVhcl9zdGF0ZV9wcm9ncmFtOgogICAgaW50IDEKICAgIHJldHVybgo="
    // class Anchor(algopy.ARC4Contract):
    txna ApplicationArgs 1
    btoi
    txnas Accounts
    // contract.py:13
    // @algopy.arc4.abimethod()
    callsub create
    intc_1 // 1
    retsub

__puya_arc4_router___transferAlgo_route@3:
    // contract.py:24
    // @algopy.arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // contract.py:8-10
    // # ANCHOR_APPROVAL_CONTRACT_BYTES :bytes = ""
    // # ANCHOR_CLEAR_CONTRACT_BYTES: bytes = "I3ByYWdtYSB2ZXJzaW9uIDEwCgpzbWFydF9jb250cmFjdHMuYW5jaG9yLmNvbnRyYWN0LkFuY2hvci5jbGVhcl9zdGF0ZV9wcm9ncmFtOgogICAgaW50IDEKICAgIHJldHVybgo="
    // class Anchor(algopy.ARC4Contract):
    txna ApplicationArgs 1
    btoi
    txnas Accounts
    txna ApplicationArgs 2
    btoi
    // contract.py:24
    // @algopy.arc4.abimethod()
    callsub transferAlgo
    intc_1 // 1
    retsub

__puya_arc4_router___transferAsset_route@4:
    // contract.py:28
    // @algopy.arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // contract.py:8-10
    // # ANCHOR_APPROVAL_CONTRACT_BYTES :bytes = ""
    // # ANCHOR_CLEAR_CONTRACT_BYTES: bytes = "I3ByYWdtYSB2ZXJzaW9uIDEwCgpzbWFydF9jb250cmFjdHMuYW5jaG9yLmNvbnRyYWN0LkFuY2hvci5jbGVhcl9zdGF0ZV9wcm9ncmFtOgogICAgaW50IDEKICAgIHJldHVybgo="
    // class Anchor(algopy.ARC4Contract):
    txna ApplicationArgs 1
    btoi
    txnas Accounts
    txna ApplicationArgs 2
    btoi
    txnas Assets
    txna ApplicationArgs 3
    btoi
    // contract.py:28
    // @algopy.arc4.abimethod()
    callsub transferAsset
    intc_1 // 1
    retsub

__puya_arc4_router___opt_into_asset_route@5:
    // contract.py:32
    // @algopy.arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // contract.py:8-10
    // # ANCHOR_APPROVAL_CONTRACT_BYTES :bytes = ""
    // # ANCHOR_CLEAR_CONTRACT_BYTES: bytes = "I3ByYWdtYSB2ZXJzaW9uIDEwCgpzbWFydF9jb250cmFjdHMuYW5jaG9yLmNvbnRyYWN0LkFuY2hvci5jbGVhcl9zdGF0ZV9wcm9ncmFtOgogICAgaW50IDEKICAgIHJldHVybgo="
    // class Anchor(algopy.ARC4Contract):
    txna ApplicationArgs 1
    btoi
    txnas Assets
    // contract.py:32
    // @algopy.arc4.abimethod()
    callsub opt_into_asset
    intc_1 // 1
    retsub

__puya_arc4_router___bare_routing@8:
    // contract.py:8-10
    // # ANCHOR_APPROVAL_CONTRACT_BYTES :bytes = ""
    // # ANCHOR_CLEAR_CONTRACT_BYTES: bytes = "I3ByYWdtYSB2ZXJzaW9uIDEwCgpzbWFydF9jb250cmFjdHMuYW5jaG9yLmNvbnRyYWN0LkFuY2hvci5jbGVhcl9zdGF0ZV9wcm9ncmFtOgogICAgaW50IDEKICAgIHJldHVybgo="
    // class Anchor(algopy.ARC4Contract):
    txn OnCompletion
    bnz __puya_arc4_router___after_if_else@12
    txn ApplicationID
    !
    assert // is creating
    intc_1 // 1
    retsub

__puya_arc4_router___after_if_else@12:
    // contract.py:8-10
    // # ANCHOR_APPROVAL_CONTRACT_BYTES :bytes = ""
    // # ANCHOR_CLEAR_CONTRACT_BYTES: bytes = "I3ByYWdtYSB2ZXJzaW9uIDEwCgpzbWFydF9jb250cmFjdHMuYW5jaG9yLmNvbnRyYWN0LkFuY2hvci5jbGVhcl9zdGF0ZV9wcm9ncmFtOgogICAgaW50IDEKICAgIHJldHVybgo="
    // class Anchor(algopy.ARC4Contract):
    intc_0 // 0
    retsub


// smart_contracts.registry.contract.Anchor.create(owner: bytes) -> void:
create:
    // contract.py:13-14
    // @algopy.arc4.abimethod()
    // def create(self, owner: algopy.Account) -> None:
    proto 1 0
    // contract.py:16
    // self.owner == algopy.Account()
    intc_0 // 0
    bytec_0 // "owner"
    app_global_get_ex
    assert // check self.owner exists
    global ZeroAddress
    ==
    // contract.py:15-17
    // assert (
    //     self.owner == algopy.Account()
    // ), "Contract has already been initialized"
    assert // Contract has already been initialized
    // contract.py:18
    // self.owner = owner
    bytec_0 // "owner"
    frame_dig -1
    app_global_put
    retsub


// smart_contracts.registry.contract.Anchor.transferAlgo(receiver: bytes, amount: uint64) -> void:
transferAlgo:
    // contract.py:24-25
    // @algopy.arc4.abimethod()
    // def transferAlgo(self,receiver:algopy.Account,amount:algopy.UInt64)-> None:
    proto 2 0
    // contract.py:26
    // self._onlyOwner()
    callsub _onlyOwner
    // contract.py:27
    // algopy.itxn.Payment(receiver=receiver, amount=amount).submit()
    itxn_begin
    frame_dig -1
    itxn_field Amount
    frame_dig -2
    itxn_field Receiver
    intc_1 // pay
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    itxn_submit
    retsub


// smart_contracts.registry.contract.Anchor._onlyOwner() -> void:
_onlyOwner:
    // contract.py:19-20
    // @algopy.subroutine
    // def _onlyOwner(self) -> None:
    proto 0 0
    // contract.py:22
    // algopy.Txn.sender == self.owner
    txn Sender
    intc_0 // 0
    bytec_0 // "owner"
    app_global_get_ex
    assert // check self.owner exists
    ==
    // contract.py:21-23
    // assert (
    //     algopy.Txn.sender == self.owner
    // ), "Only the account set in global_state.owner may call this method"
    assert // Only the account set in global_state.owner may call this method
    retsub


// smart_contracts.registry.contract.Anchor.transferAsset(receiver: bytes, asset: uint64, amount: uint64) -> void:
transferAsset:
    // contract.py:28-29
    // @algopy.arc4.abimethod()
    // def transferAsset(self,receiver:algopy.Account,asset:algopy.Asset,amount:algopy.UInt64)-> None:
    proto 3 0
    // contract.py:30
    // self._onlyOwner()
    callsub _onlyOwner
    // contract.py:31
    // algopy.itxn.AssetTransfer(asset_receiver=receiver, xfer_asset=asset, asset_amount=amount).submit()
    itxn_begin
    frame_dig -1
    itxn_field AssetAmount
    frame_dig -2
    itxn_field XferAsset
    frame_dig -3
    itxn_field AssetReceiver
    intc_2 // axfer
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    itxn_submit
    retsub


// smart_contracts.registry.contract.Anchor.opt_into_asset(asset: uint64) -> void:
opt_into_asset:
    // contract.py:32-33
    // @algopy.arc4.abimethod()
    // def opt_into_asset(self,asset:algopy.Asset)-> None:
    proto 1 0
    // contract.py:34
    // self._onlyOwner()
    callsub _onlyOwner
    // contract.py:35
    // algopy.itxn.AssetTransfer(asset_receiver=algopy.Txn.sender, xfer_asset=asset,asset_amount=algopy.UInt64(0)).submit()
    itxn_begin
    txn Sender
    intc_0 // 0
    itxn_field AssetAmount
    frame_dig -1
    itxn_field XferAsset
    itxn_field AssetReceiver
    intc_2 // axfer
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    itxn_submit
    retsub
