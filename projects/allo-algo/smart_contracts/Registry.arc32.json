{
    "hints": {
        "getProfileById(byte[])(byte[],uint256,string,string,address,uint64,address[])": {
            "call_config": {
                "no_op": "CALL"
            },
            "structs": {
                "output": {
                    "name": "Profile",
                    "elements": [
                        [
                            "id",
                            "byte[]"
                        ],
                        [
                            "nonce",
                            "uint256"
                        ],
                        [
                            "name",
                            "string"
                        ],
                        [
                            "metadata",
                            "string"
                        ],
                        [
                            "owner",
                            "address"
                        ],
                        [
                            "anchor",
                            "uint64"
                        ],
                        [
                            "members",
                            "address[]"
                        ]
                    ]
                }
            }
        },
        "getProfileByAnchor(uint64)(byte[],uint256,string,string,address,uint64,address[])": {
            "call_config": {
                "no_op": "CALL"
            },
            "structs": {
                "output": {
                    "name": "Profile",
                    "elements": [
                        [
                            "id",
                            "byte[]"
                        ],
                        [
                            "nonce",
                            "uint256"
                        ],
                        [
                            "name",
                            "string"
                        ],
                        [
                            "metadata",
                            "string"
                        ],
                        [
                            "owner",
                            "address"
                        ],
                        [
                            "anchor",
                            "uint64"
                        ],
                        [
                            "members",
                            "address[]"
                        ]
                    ]
                }
            }
        },
        "createProfile(uint256,string,string)byte[]": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "addMember(byte[],address)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "updateProfileName(byte[],string)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "updateProfileMetadata(byte[],string)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "isOwnerOrMemberOfProfile(byte[],address)bool": {
            "call_config": {
                "no_op": "CALL"
            }
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCgpzbWFydF9jb250cmFjdHMucmVnaXN0cnkuUmVnaXN0cnkuY2xlYXJfc3RhdGVfcHJvZ3JhbToKICAgIGludCAxCiAgICByZXR1cm4K"
    },
    "state": {
        "global": {
            "num_byte_slices": 1,
            "num_uints": 0
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 0
        }
    },
    "schema": {
        "global": {
            "declared": {
                "version": {
                    "type": "bytes",
                    "key": "version"
                }
            },
            "reserved": {}
        },
        "local": {
            "declared": {},
            "reserved": {}
        }
    },
    "contract": {
        "name": "Registry",
        "methods": [
            {
                "name": "getProfileById",
                "args": [
                    {
                        "type": "byte[]",
                        "name": "id"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "(byte[],uint256,string,string,address,uint64,address[])"
                }
            },
            {
                "name": "getProfileByAnchor",
                "args": [
                    {
                        "type": "uint64",
                        "name": "anchor"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "(byte[],uint256,string,string,address,uint64,address[])"
                }
            },
            {
                "name": "createProfile",
                "args": [
                    {
                        "type": "uint256",
                        "name": "nonce"
                    },
                    {
                        "type": "string",
                        "name": "name"
                    },
                    {
                        "type": "string",
                        "name": "metadata"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "byte[]"
                }
            },
            {
                "name": "addMember",
                "args": [
                    {
                        "type": "byte[]",
                        "name": "profileId"
                    },
                    {
                        "type": "address",
                        "name": "member"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "updateProfileName",
                "args": [
                    {
                        "type": "byte[]",
                        "name": "profileId"
                    },
                    {
                        "type": "string",
                        "name": "name"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "updateProfileMetadata",
                "args": [
                    {
                        "type": "byte[]",
                        "name": "profileId"
                    },
                    {
                        "type": "string",
                        "name": "metadata"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "isOwnerOrMemberOfProfile",
                "args": [
                    {
                        "type": "byte[]",
                        "name": "profileId"
                    },
                    {
                        "type": "address",
                        "name": "address"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "bool"
                }
            }
        ],
        "networks": {}
    },
    "bare_call_config": {
        "no_op": "CREATE"
    }
}